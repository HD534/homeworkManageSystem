<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.andy.mapper.CourseMapper">
	<resultMap id="BaseResultMap" type="com.andy.model.Course">
		<id column="course_id" property="courseId" jdbcType="VARCHAR"/>
		<result column="course_name" property="courseName" jdbcType="VARCHAR"/>
		<result column="create_date" property="createDate" jdbcType="DATE"/>
		<result column="course_desc" property="courseDesc" jdbcType="VARCHAR"/>
	</resultMap>

	<sql id="Base_Column_List">
      course_id, course_name, create_date,course_desc
   </sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
			parameterType="java.lang.String">
		select
		<include refid="Base_Column_List"/>
		from course
		where course_id = #{courseId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
      delete from course
      where course_id = #{courseId,jdbcType=VARCHAR}
   </delete>
	<insert id="insert" parameterType="com.andy.model.Course">
      insert into course (course_id, course_name, create_date,course_desc)
      values (#{courseId,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR},
      #{createDate,jdbcType=DATE},
      #{courseDesc,jdbcType=VARCHAR})
   </insert>
	<insert id="insertSelective" parameterType="com.andy.model.Course">
		insert into course
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="courseId != null">
				course_id,
			</if>
			<if test="courseName != null">
				course_name,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="courseDesc != null">
				course_desc,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="courseId != null">
				#{courseId,jdbcType=VARCHAR},
			</if>
			<if test="courseName != null">
				#{courseName,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=DATE},
			</if>
			<if test="courseDesc != null">
				#{courseDesc,jdbcType=VARCHAR},
			</if>


		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.andy.model.Course">
		update course
		<set>
			<if test="courseName != null">
				course_name = #{courseName,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=DATE},
			</if>
			<if test="courseDesc != null">
				course_desc = #{courseDesc,jdbcType=VARCHAR},
			</if>
		</set>
		where course_id = #{courseId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.andy.model.Course">
      update course
      set course_name = #{courseName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=DATE},
      course_desc = #{courseDesc,jdbcType=VARCHAR}
      where course_id = #{courseId,jdbcType=VARCHAR}
   </update>
	<update id="updateByPrimaryKey" parameterType="com.andy.model.Course">
      update course
      set course_name = #{courseName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=DATE}
      where course_id = #{courseId,jdbcType=VARCHAR}
   </update>

	<select id="listCourse" parameterType="Map" resultType="Map">
		select * from course c
		left join courseInstitute ci on ci.course_id = c.course_id
		left join institute i on i.institute_id = ci.institute_id
		<if test="rowFrom != null">
			order by c.create_date desc LIMIT #{rowFrom,jdbcType=INTEGER} ,
			#{limit,jdbcType=INTEGER}
		</if>

	</select>

	<select id="checkClassCourse" parameterType="Map" resultType="Map">
      select c.course_id from course c
      left join courseclass cc on cc.course_id = c.course_id
      where cc.class_id =#{classId,jdbcType=VARCHAR}
      and cc.course_id=#{courseId,jdbcType=VARCHAR}
   </select>


	<select id="listCourseByUserType" parameterType="Map"
			resultType="Map">
		SELECT
		c.course_name,
		c.course_id,
		c.course_desc,
		c.create_date,
		i.institute_name,
		i.institute_id,
		u.user_name,
		te.term_name,
		class.class_name
		FROM
		course c
		LEFT JOIN courseinstitute ci ON ci.course_id = c.course_id
		LEFT JOIN institute i ON i.institute_id = ci.institute_id
		LEFT JOIN teachercourse tc ON tc.course_id = c.course_id
		LEFT JOIN teacher t ON t.teacher_id = tc.teacher_id
		LEFT JOIN USER u ON u.user_id = t.user_id
		LEFT JOIN courseterm cs on cs.course_id = c.course_id
		LEFT JOIN term te on te.term_id = cs.term_id
		LEFT JOIN courseclass cc on cc.course_id = c.course_id
		LEFT JOIN tblclass class on class.class_id = cc.class_id
		<if test="userType == 2">
			LEFT JOIN studentclass stuc on stuc.class_id = class.class_id
			LEFT JOIN student stu on stu.student_id = stuc.student_id
			LEFT JOIN `user` user2 on user2.user_id = stu.user_id
		</if>
		where 1=1
		<if test="userType == 1">
			and u.user_id = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="userType == 2">
			and user2.user_id = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="termValue != null">
			and te.term_value = #{termValue,jdbcType=VARCHAR}
		</if>
		<if test="instituteId != null">
			and i.institute_id = #{instituteId,jdbcType=VARCHAR}
		</if>
		<if test="className != null">
			and class.class_name like concat('%',#{className,jdbcType=VARCHAR},'%')
		</if>
		<if test="className != null">
			and c.course_name like concat('%',#{courseName,jdbcType=VARCHAR},'%')
		</if>

		<if test="rowFrom != null">
			order by c.create_date desc LIMIT #{rowFrom,jdbcType=INTEGER} ,
			#{limit,jdbcType=INTEGER}
		</if>

	</select>


	<select id="listCourseByParamMap" parameterType="Map"
			resultType="Map">
		SELECT
		c.course_name,
		c.course_id
		FROM
		course c
		LEFT JOIN courseinstitute ci ON ci.course_id = c.course_id
		LEFT JOIN institute i ON i.institute_id = ci.institute_id
		LEFT JOIN teachercourse tc ON tc.course_id = c.course_id
		LEFT JOIN teacher t ON t.teacher_id = tc.teacher_id
		LEFT JOIN USER u ON u.user_id = t.user_id
		LEFT JOIN courseterm cs on cs.course_id = c.course_id
		LEFT JOIN term te on te.term_id = cs.term_id
		where 1=1
		<if test="userType == 1">
			and u.user_id = #{userId,jdbcType=VARCHAR}
		</if>

		<if test="termValue != null">
			and te.term_value = #{termValue,jdbcType=VARCHAR}
		</if>

		<if test="instituteId != null">
			and i.institute_id = #{instituteId,jdbcType=VARCHAR}
		</if>

		<if test="rowFrom != null">
			order by c.create_date desc LIMIT #{rowFrom,jdbcType=INTEGER} ,
			#{limit,jdbcType=INTEGER}
		</if>

	</select>


	<select id="selectNum" parameterType="Map" resultType="int">
		SELECT
		count(*)
		FROM
		course c
		LEFT JOIN courseinstitute ci ON ci.course_id = c.course_id
		LEFT JOIN institute i ON i.institute_id = ci.institute_id
		LEFT JOIN teachercourse tc ON tc.course_id = c.course_id
		LEFT JOIN teacher t ON t.teacher_id = tc.teacher_id
		LEFT JOIN courseterm cs on cs.course_id = c.course_id
		LEFT JOIN term te on te.term_id = cs.term_id
		LEFT JOIN USER u ON u.user_id = t.user_id
		LEFT JOIN courseclass cc on cc.course_id = c.course_id
		LEFT JOIN tblclass class on class.class_id = cc.class_id
		<if test="userType == 2">
			LEFT JOIN studentclass stuc on stuc.class_id = class.class_id
			LEFT JOIN student stu on stu.student_id = stuc.student_id
			LEFT JOIN `user` user2 on user2.user_id = stu.user_id
		</if>
		where 1=1
		<if test="userType == 1">
			and u.user_id = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="userType == 2">
			and user2.user_id = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="termValue != null">
			and te.term_value = #{termValue,jdbcType=VARCHAR}
		</if>

		<if test="instituteId != null">
			and i.institute_id = #{instituteId,jdbcType=VARCHAR}
		</if>
		<if test="className != null">
			and class.class_name like concat('%',#{className,jdbcType=VARCHAR},'%')
		</if>
		<if test="className != null">
			and c.course_name like concat('%',#{courseName,jdbcType=VARCHAR},'%')
		</if>

	</select>

	<insert id="insertCourseInstitute" parameterType="Map">
      insert into courseInstitute (course_institute_id,course_id,institute_id)
      values ( #{courseInstituteId,jdbcType=VARCHAR} ,
      #{courseId,jdbcType=VARCHAR} , #{instituteId,jdbcType=VARCHAR} )
   </insert>

	<insert id="insertCourseTerm" parameterType="Map">
      insert into courseTerm (course_term_id,course_id,term_id)
      values ( #{courseTermId,jdbcType=VARCHAR} , #{courseId,jdbcType=VARCHAR} ,
      #{termId,jdbcType=VARCHAR} )
   </insert>

	<insert id="insertTeacherCourse" parameterType="Map">
      insert into
      teacherCourse (teacher_course_id,course_id,teacher_id)
      values (
      #{teacherCourseId,jdbcType=VARCHAR} , #{courseId,jdbcType=VARCHAR},
      #{teacherId,jdbcType=VARCHAR} )
   </insert>

	<insert id="assignClassCourse" parameterType="Map">
      insert into
      courseClass (course_class_id,course_id,class_id)
      values (
      #{courseClassId,jdbcType=VARCHAR} , #{courseId,jdbcType=VARCHAR},
      #{classId,jdbcType=VARCHAR} )
   </insert>

	<select id="listClassCourse" parameterType="Map" resultType="Map">
		SELECT
		c.course_id,
		c.course_name,
		c.course_desc,
		cla.class_name,
		u.user_name as teacher_name,
		i.institute_name
		FROM
		course c
		LEFT JOIN course_class cc ON cc.course_id = c.course_id
		LEFT JOIN tblclass cla ON cla.class_id = cc.class_id
		LEFT JOIN courseinstitute cs on cs.course_id = c.course_id
		LEFT JOIN institute i on i.institute_id = cs.institute_id
		LEFT JOIN teachercourse tc ON tc.course_id = c.course_id
		LEFT JOIN teacher t on t.teacher_id = tc.teacher_id
		LEFT JOIN user u on u.user_id = t.user_id
		where 1=1
		<if test="userType == 1">
			and u.user_id = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="className != null">
			and cla.class_name like concat('%',#{className,jdbcType=VARCHAR},'%')
		</if>
		<if test="className != null">
			and c.course_name like concat('%',#{courseName,jdbcType=VARCHAR},'%')
		</if>
		<if test="instituteId != null">
			and i.institute_id = #{instituteId,jdbcType=VARCHAR}
		</if>
		<if test="rowFrom != null">
			order by c.create_date desc LIMIT #{rowFrom,jdbcType=INTEGER} ,
			#{limit,jdbcType=INTEGER}
		</if>

	</select>

	<select id="listClassCourseNum" parameterType="Map" resultType="int">
		SELECT
		c.course_id,
		c.course_name,
		c.course_desc,
		cla.class_name,
		u.user_name as "teacher_name",
		i.institute_name
		FROM
		course c
		LEFT JOIN course_class cc ON cc.course_id = c.course_id
		LEFT JOIN tblclass cla ON cla.class_id = cc.class_id
		LEFT JOIN courseinstitute cs on cs.course_id = c.course_id
		LEFT JOIN institute i on i.institute_id = cs.institute_id
		LEFT JOIN teachercourse tc ON tc.course_id = c.course_id
		LEFT JOIN teacher t on t.teacher_id = tc.teacher_id
		LEFT JOIN user u on u.user_id = t.user_id
		where 1=1
		<if test="userType == 1">
			and u.user_id = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="className != null">
			and cla.class_name like concat('%',#{className,jdbcType=VARCHAR},'%')
		</if>
		<if test="className != null">
			and c.course_name like concat('%',#{courseName,jdbcType=VARCHAR},'%')
		</if>
		<if test="instituteId != null">
			and i.institute_id = #{instituteId,jdbcType=VARCHAR}
		</if>

	</select>


</mapper>
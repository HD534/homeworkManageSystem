<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.andy.mapper.CourseMapper">
	<resultMap id="BaseResultMap" type="com.andy.model.Course">
		<id column="courseId" property="courseId" jdbcType="VARCHAR" />
		<result column="courseName" property="courseName" jdbcType="VARCHAR" />
		<result column="createDate" property="createDate" jdbcType="DATE" />

	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.andy.model.Course"
		extends="BaseResultMap">
		<result column="courseDesc" property="courseDesc" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		courseId, courseName, createDate
	</sql>
	<sql id="Blob_Column_List">
		courseDesc
	</sql>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from course
		where courseId = #{courseId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from course
		where courseId = #{courseId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.andy.model.Course">
		insert into course (courseId, courseName, createDate,
		courseDesc)
		values (#{courseId,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR},
		#{createDate,jdbcType=DATE},
		#{courseDesc,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.andy.model.Course">
		insert into course
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="courseId != null">
				courseId,
			</if>
			<if test="courseName != null">
				courseName,
			</if>
			<if test="createDate != null">
				createDate,
			</if>
			<if test="courseDesc != null">
				courseDesc,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="courseId != null">
				#{courseId,jdbcType=VARCHAR},
			</if>
			<if test="courseName != null">
				#{courseName,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=DATE},
			</if>
			<if test="courseDesc != null">
				#{courseDesc,jdbcType=LONGVARCHAR},
			</if>


		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.andy.model.Course">
		update course
		<set>
			<if test="courseName != null">
				courseName = #{courseName,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				createDate = #{createDate,jdbcType=DATE},
			</if>
			<if test="courseDesc != null">
				courseDesc = #{courseDesc,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where courseId = #{courseId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.andy.model.Course">
		update course
		set courseName = #{courseName,jdbcType=VARCHAR},
		createDate = #{createDate,jdbcType=DATE},
		courseDesc = #{courseDesc,jdbcType=LONGVARCHAR}
		where courseId = #{courseId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.andy.model.Course">
		update course
		set courseName = #{courseName,jdbcType=VARCHAR},
		createDate = #{createDate,jdbcType=DATE}
		where courseId = #{courseId,jdbcType=VARCHAR}
	</update>

	<select id="listCourse" parameterType="Map" resultType="Map">


		select * from course c

		left join courseInstitute ci on ci.courseId = c.courseId
		left join institute i on i.instituteId = ci.instituteId
		<if test="rowFrom != null">
			order by c.createDate desc LIMIT #{rowFrom,jdbcType=INTEGER} ,
			#{limit,jdbcType=INTEGER}
		</if>

	</select>
	
	<select id="checkClassCourse" parameterType="Map" resultType="int">
		select 1 from course c	
		left join courseclass cc on cc.courseId = c.courseId
		where cc.classId =#{classId,jdbcType=VARCHAR} 
		and cc.courseId=#{courseId,jdbcType=VARCHAR}
	</select>
	

	<select id="listCourseByUserType" parameterType="Map"
		resultType="Map">
		SELECT
		c.courseName,
		c.courseId,
		c.courseDesc,
		c.createDate,
		i.instituteName,
		i.instituteId,
		u.userName,
		te.termName,
		class.className as className
		FROM
		course c
		LEFT JOIN courseInstitute ci ON ci.courseId = c.courseId
		LEFT JOIN institute i ON i.instituteId = ci.instituteId
		LEFT JOIN teacherCourse tc ON tc.courseId = c.courseId
		LEFT JOIN teacher t ON t.teacherId = tc.teacherId
		LEFT JOIN USER u ON u.userId = t.userId
		LEFT JOIN courseterm cs on cs.courseId = c.courseId
		LEFT JOIN term te on te.termId = cs.termId
		LEFT JOIN courseclass cc on cc.courseId = c.courseId
		LEFT JOIN tblclass class on class.classid = cc.classId
		<if test="userType == 2">
		LEFT JOIN studentclass stuc on stuc.classId = class.classId
		LEFT JOIN student stu on stu.studentId = stuc.studentId
		LEFT JOIN `user` user2 on user2.userId = stu.userId
		</if>
		
		where 1=1
		<if test="userType == 1">
			and u.userId = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="userType == 2">
			and user2.userId = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="termValue != null">
			and te.termValue = #{termValue,jdbcType=VARCHAR}
		</if>
		<if test="instituteId != null">
			and i.instituteId = #{instituteId,jdbcType=VARCHAR}
		</if>
		<if test="className != null">
			and class.className like concat('%',#{className,jdbcType=VARCHAR},'%')
		</if>
		<if test="className != null">
			and c.courseName like concat('%',#{courseName,jdbcType=VARCHAR},'%')
		</if>

		<if test="rowFrom != null">
			order by c.createDate desc LIMIT #{rowFrom,jdbcType=INTEGER} ,
			#{limit,jdbcType=INTEGER}
		</if>

	</select>
	
	
	<select id="listCourseByParamMap" parameterType="Map"
		resultType="Map">
		SELECT
		c.courseName,
		c.courseId
		FROM
		course c
		LEFT JOIN courseInstitute ci ON ci.courseId = c.courseId
		LEFT JOIN institute i ON i.instituteId = ci.instituteId
		LEFT JOIN teacherCourse tc ON tc.courseId = c.courseId
		LEFT JOIN teacher t ON t.teacherId = tc.teacherId
		LEFT JOIN USER u ON u.userId = t.userId
		LEFT JOIN courseterm cs on cs.courseId = c.courseId
		LEFT JOIN term te on te.termId = cs.termId
		where 1=1
		<if test="userType == 1">
			and u.userId = #{userId,jdbcType=VARCHAR}
		</if>
		
		<if test="termValue != null">
			and te.termValue = #{termValue,jdbcType=VARCHAR}
		</if>
		
		<if test="instituteId != null">
			and i.instituteId = #{instituteId,jdbcType=VARCHAR}
		</if>

		<if test="rowFrom != null">
			order by c.createDate desc LIMIT #{rowFrom,jdbcType=INTEGER} ,
			#{limit,jdbcType=INTEGER}
		</if>

	</select>


	<!-- <select id="selectNum" parameterType="Map" resultType="int">
		select count(*) from course c
		<if test="userType == 1">
			left join teacherCourse tc on tc.courseId = c.courseId
			LEFT JOIN teacher t on t.teacherId = tc.teacherId
			where t.userId = #{userId,jdbcType=VARCHAR}
		</if>
	</select> -->
	<select id="selectNum" parameterType="Map" resultType="int">
		SELECT
		count(*)
		FROM
		course c
		LEFT JOIN courseInstitute ci ON ci.courseId = c.courseId
		LEFT JOIN institute i ON i.instituteId = ci.instituteId
		LEFT JOIN teacherCourse tc ON tc.courseId = c.courseId
		LEFT JOIN teacher t ON t.teacherId = tc.teacherId
		LEFT JOIN courseterm cs on cs.courseId = c.courseId
		LEFT JOIN term te on te.termId = cs.termId
		LEFT JOIN USER u ON u.userId = t.userId
		LEFT JOIN courseclass cc on cc.courseId = c.courseId
		LEFT JOIN tblclass class on class.classid = cc.classId
		<if test="userType == 2">
		LEFT JOIN studentclass stuc on stuc.classId = class.classId
		LEFT JOIN student stu on stu.studentId = stuc.studentId
		LEFT JOIN `user` user2 on user2.userId = stu.userId
		</if>
		where 1=1
		<if test="userType == 1">
			and u.userId = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="userType == 2">
			and user2.userId = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="termValue != null">
			and te.termValue = #{termValue,jdbcType=VARCHAR}
		</if>
		
		<if test="instituteId != null">
			and i.instituteId = #{instituteId,jdbcType=VARCHAR}
		</if>
		<if test="className != null">
			and class.className like concat('%',#{className,jdbcType=VARCHAR},'%')
		</if>
		<if test="className != null">
			and c.courseName like concat('%',#{courseName,jdbcType=VARCHAR},'%')
		</if>
		
	</select>

	<insert id="insertCourseInstitute" parameterType="Map">
		insert into courseInstitute (courseInstituteId,courseId,instituteId)
		values ( #{courseInstituteId,jdbcType=VARCHAR} ,
		#{courseId,jdbcType=VARCHAR} , #{instituteId,jdbcType=VARCHAR} )
	</insert>

	<insert id="insertCourseTerm" parameterType="Map">
		insert into courseTerm (courseTermId,courseId,termId)
		values ( #{courseTermId,jdbcType=VARCHAR} , #{courseId,jdbcType=VARCHAR} ,
		#{termId,jdbcType=VARCHAR} )
	</insert>

	<insert id="insertTeacherCourse" parameterType="Map">
		insert into
		teacherCourse (teacherCourseId,courseId,teacherId)
		values (
		#{teacherCourseId,jdbcType=VARCHAR} , #{courseId,jdbcType=VARCHAR}
		,
		#{teacherId,jdbcType=VARCHAR} )
	</insert>

	<insert id="assignClassCourse" parameterType="Map">
		insert into
		courseClass (courseClassId,courseId,classId)
		values (
		#{courseClassId,jdbcType=VARCHAR} , #{courseId,jdbcType=VARCHAR}
		,
		#{classId,jdbcType=VARCHAR} )
	</insert>

	<select id="listClassCourse" parameterType="Map" resultType="Map">
		SELECT
		c.courseId,
		c.courseName,
		c.courseDesc,
		cla.className,
		u.userName as teacherName,
		i.instituteName
		FROM
		course c
		LEFT JOIN courseClass cc ON cc.courseId = c.courseId
		LEFT JOIN tblclass cla ON cla.classId = cc.classId
		LEFT JOIN courseinstitute cs on cs.courseId = c.courseId
		LEFT JOIN institute i on i.instituteId = cs.instituteId
		LEFT JOIN teachercourse tc ON tc.courseId = c.courseId
		LEFT JOIN teacher t on t.teacherId = tc.teacherId
		LEFT JOIN user u on u.userId = t.userId
		where 1=1
		<if test="userType == 1">
			and u.userId = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="className != null">
			and cla.className like concat('%',#{className,jdbcType=VARCHAR},'%')
		</if>
		<if test="className != null">
			and c.courseName like concat('%',#{courseName,jdbcType=VARCHAR},'%')
		</if>
		<if test="instituteId != null">
			and i.instituteId = #{instituteId,jdbcType=VARCHAR}
		</if>
		<if test="rowFrom != null">
			order by c.createDate desc LIMIT #{rowFrom,jdbcType=INTEGER} ,
			#{limit,jdbcType=INTEGER}
		</if>

	</select>
	
	<select id="listClassCourseNum" parameterType="Map" resultType="int">
		SELECT
		c.courseId,
		c.courseName,
		c.courseDesc,
		cla.className,
		u.userName as teacherName,
		i.instituteName
		FROM
		course c
		LEFT JOIN courseClass cc ON cc.courseId = c.courseId
		LEFT JOIN tblclass cla ON cla.classId = cc.classId
		LEFT JOIN courseinstitute cs on cs.courseId = c.courseId
		LEFT JOIN institute i on i.instituteId = cs.instituteId
		LEFT JOIN teachercourse tc ON tc.courseId = c.courseId
		LEFT JOIN teacher t on t.teacherId = tc.teacherId
		LEFT JOIN user u on u.userId = t.userId
		where 1=1
		<if test="userType == 1">
			and u.userId = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="className != null">
			and cla.className like concat('%',#{className,jdbcType=VARCHAR},'%')
		</if>
		<if test="className != null">
			and c.courseName like concat('%',#{courseName,jdbcType=VARCHAR},'%')
		</if>
		<if test="instituteId != null">
			and i.instituteId = #{instituteId,jdbcType=VARCHAR}
		</if>

	</select>


</mapper>